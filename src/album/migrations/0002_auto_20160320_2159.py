# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-21 01:59
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('song', '0001_initial'),
        ('album', '0001_initial'),
        ('artist', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='albumsong',
            name='song',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='song.Song'),
        ),
        migrations.AddField(
            model_name='albumartists',
            name='album',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='album_albumartist_album', to='album.Album'),
        ),
        migrations.AddField(
            model_name='albumartists',
            name='artist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='album_albumartist_artist', to='artist.Artist'),
        ),
        migrations.AddField(
            model_name='album',
            name='album_artists',
            field=models.ManyToManyField(blank=True, related_name='album_albumartists', through='album.AlbumArtists', to='artist.Artist'),
        ),
        migrations.AddField(
            model_name='album',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='album_creator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='album',
            name='last_editor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='album_last_editor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='album',
            name='songs',
            field=models.ManyToManyField(blank=True, related_name='albums', through='album.AlbumSong', to='song.Song'),
        ),
    ]
