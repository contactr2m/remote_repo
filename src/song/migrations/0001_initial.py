# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-21 01:59
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('artist', '0001_initial'),
        ('album', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('name', models.CharField(max_length=50)),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'verbose_name': 'Genre',
                'verbose_name_plural': 'Genres',
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, overwrite=True, populate_from='name')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('lyrics', models.TextField(max_length=500)),
                ('listed', models.BooleanField(default=True, help_text='Should this Song be shown on the default list?', verbose_name='Include in listings')),
                ('disable_editing', models.BooleanField(default=False, help_text='Disable Editing. If verified by admin', verbose_name='Disable Editing')),
                ('album', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='song_album', to='album.Album')),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='song_artist', to='artist.Artist')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='song_creator', to=settings.AUTH_USER_MODEL)),
                ('genres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='song_genre', to='song.Genre')),
                ('last_editor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='song_last_editor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-name',),
                'verbose_name': 'Song',
                'verbose_name_plural': 'Songs',
            },
        ),
        migrations.CreateModel(
            name='SongArtists',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist_songartist', to='artist.Artist')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='song_songartist', to='song.Song')),
            ],
            options={
                'verbose_name': 'Artist (title credited)',
                'verbose_name_plural': 'Artists (title credited)',
            },
        ),
        migrations.AddField(
            model_name='song',
            name='song_artists',
            field=models.ManyToManyField(blank=True, related_name='credited', through='song.SongArtists', to='artist.Artist'),
        ),
    ]
